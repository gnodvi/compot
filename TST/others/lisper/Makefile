# -*-   mode: makefile ; coding: koi8   -*- ------------------------------------

#-------------------------------------------------------------------------------

#CC    =  gcc -g -ansi -pedantic -Wall -D_C_SOURCE=1
#CC    =  LANG=C  gcc -Wall 
CC    =  LANG=C  gcc -x c 

#-------------------------------------------------------------------------------
# 
#-------------------------------------------------------------------------------

B  = .
G  = .
V  = .

#-------------------------------------------------------------------------------

V_RSB3_C = $(V)/p_rsb3.cc
V_RSB3_N = $(A_COMM_H) $(V_RSB__H)
V_RSB3_O = $(V)/T/p_rsb3.o
V_RSB3_SO = $(V)/T/p-rsb-.so

##-------------------------------------------------------------------------------

GNUPLOTI_DIR =PLOTER/ploter

GNUPLOTI_INC = -I$(GNUPLOTI_DIR) 
GNUPLOTI_LIB =   $(GNUPLOTI_DIR)/T/p_gnup.o


S_INCS = $(XINC) $(GNUPLOTI_INC)  #$(GSL_INC) $(GINC) 
S_LIBS = $(XLIB) $(GNUPLOTI_LIB)  #$(GSL_LIB) $(GLIB) 

#-------------------------------------------------------------------------------
 

PROGS = $(V_RSB3_SO)  $(G)/T/x_find.so

#---------------------------------------------------------------

all: ASDF $(PROGS)

ASDF:
	(cd BIN/LISP; make)

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
G_FIND_C = $(G)/x_find.cc
G_FIND_O = $(G)/T/x_find.o

$(G_FIND_O): $(G_FIND_C) 
	$(CC) $(FLAGS) -fpic  -x c -o $@ -c $^  

$(G)/T/x_find.so: $(G_FIND_O) 
	gcc $(FLAGS) -shared -fpic  -o $@ $^

#---------------------------------------------------------------

$(B)/T/ltk.fas: $(B)/b-ltk+.cl
	clisp -c $< -o $@ --quiet 

#-------------------------------------------------------------------------------

clean :
	rm -f T/*.o T/*.so $(PROGS)
	(cd BIN/LISP; make clean)

test:
	T.sh

tao_loop0:
	cl t~.cl META tao_loop0 50 1 1 1706 0
	sl t~.cl META tao_loop0 50 1 1 1706 0

#---------------------------------------------------------------

# The problem is that in the link step you tell the compiler to treat 
# hello.o as a C file. That fails.

# I have already given NeedHelp a solution/workaround in the thread
# "Configure "-x c" options with "--with-cflags" does not work for me."

# РЕШЕНИЕ: компилировать надо с флагом, а собирать уже обычным способом!
#
 
# =============================================================================#

$(V_RSB3_O): $(V_RSB3_C) $(V_RSB__H)
	$(CC) $(FLAGS) -x c -fpic -o $@ -c $(V_RSB3_C)

$(V_RSB3_SO): $(V_RSB3_O) 
	gcc $(FLAGS) -shared -fpic  -o $@ $^

#-------------------------------------------------------------------------------
 
# TODO:
 
# + тестовые расчеты по минимумам сложных функций;
# + адаптивный "полный перебор" и "случайно-спусковой" алгоритмы;
# + использовать для поиска минимумов библиотеку GAUL-S;

# + MultiFor для множественного использования (структура);

# - комбинирвать разные методы (после GA или DE сделать спуск);
# - повторять поиск на разных популяциях, набирая статистику до нужного решения;
# - перенести сюда все примеры из gaul-t и делать рефакторинг самой GAUL;
# - все-равно без адаптивных-связанных веток алгоримов - смысла НЕТ;

#-------------------------------------------------------------------------------
