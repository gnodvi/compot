#!/bin/sh
#
# -*- mode: sh -*-


#-------------------------------------------------------------------------------

#clisp -Efile koi8-r -C $*

#LANG=C sbcl --noinform --script $1 $2 $3 $4 $5 $6 $7 $8 $9 $10 $11 $12

#-------------------------------------------------------------------------------


lisp  -quiet -batch -load $* -eval '(quit)'

#-------------------------------------------------------------------------------
# 

# Note that it'd be even better to use ${1+"$@"} instead of $* in the shell script to pass through all the parameters untouched.

# Explanation:

# $* first concatenates all parameters, separating them with space (the first character of $IFS, in fact), and after that, splits them again according to $IFS. My suggestion does NOT do this. This matters when some parameters contain whitespace, such as
# /some/program -name 'Hannah Schroeter'

#-------------------------------------------------------------------------------

# $Id: runlisp,v 1.3 2003/04/22 02:33:53 erik Exp $
# $Source: /home/cvsd/repo/bin/runlisp,v $

# A handy script to run Lisp as shellscripts.  In the top of your
# file, put:
#
#  #!/usr/bin/env runlisp
#
# and stick runlisp (this script) somewhere in your path.  Then you
# can have regular-looking shellscripts that are written in Lisp.

# If you have another Lisp implementation and know what arguments to
# pass to it for this to work, feel free to add it and send me
# (erik@nittin.net) the patch.


# if [ -f /usr/bin/sbcl ]; then
#    /usr/bin/sbcl --noinform --disable-debugger --eval 
# '(set-dispatch-macro-character #\# #\! (lambda (stream bang number) 
# (declare (ignore bang number)) (read-line stream) t))' --load $1 --eval 
# '(quit)'
# elif [ -f /usr/bin/lisp ]; then
#    /usr/bin/lisp -quiet -batch -noinit -eval 
# '(set-dispatch-macro-character #\# #\! (lambda (stream bang number) 
# (declare (ignore bang number)) (read-line stream) t))' -load $1 -eval 
# '(quit)'
# else
#    echo "$0: could not find a Lisp I know how to call"
# fi

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
