# -*-   mode: tcl  ; coding: koi8   -*- ----------------------------------------

#!/bin/sh
# \
exec tclsh "$0" ${1+"$@"}

#-------------------------------------------------------------------------------
#
#-------------------------------------------------------------------------------

# source "a-comm.tl"
# #source "a-rand.tl"

# source "a-disp.tl"

# # подключаем тесты только если  файлы есть;
# # другой способ - заключить их в отдельные процедуры 0-го уровня

# my_source "a-comp.tl"
# my_source "a-menu.tl"


# ;-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
proc TEST_capture {} {


  #if {$::OS == "QNX"} {
  #  load  ./b_cqnx.so Capture
  #  #load  ac_capt.so Capture
  #} else {
    #load  a_capt.so Capture

  set this_dir [pwd]
  #set name_lib [file join "$this_dir/T" "c_capt.so"]
  set name_lib [file join "$this_dir/T" "ranlib.so"]
  load $name_lib Capture
  #}

  #tcl_capture

  set ret1 [tcl_capture {puts "HHHHHHHHH"}]

  # alloc: invalid block: 0x875a90: f8 30
  # аварийный останов - 
  # ошибка была именно здесь только, при возврате непосредственно!
  # исправил: TCL_DYNAMIC -> NULL

  puts ""
  puts "RET1 = $ret1"

  tcl_capture {puts "AAAAAAAAA"} ret2
  puts ""
  puts "RET2 = $ret2"

  #------------------------------------------

  set r [knuth_random]

  puts "r = $r"

  puts ""

  #------------------------------------------

}
#-------------------------------------------------------------------------------

TEST_capture 

#-------------------------------------------------------------------------------

# set CUR_DIR "c"
  
# READ_AND_CALL_ARGUS  $CUR_DIR

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#
################################################################################

