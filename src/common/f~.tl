# -*-   mode: tcl  ; coding: koi8   -*- ----------------------------------------

#!/bin/sh
# \
exec tclsh "$0" ${1+"$@"}

#-------------------------------------------------------------------------------
#
#-------------------------------------------------------------------------------

set COMPOT "./COMPOT"

set auto_path [linsert $auto_path 0 $COMPOT]

set auto_path [linsert $auto_path 0 $COMPOT/src/common] ;# for JIM

#-----------------------------------------------------------------

package require compot::common 

# ;-------------------------------------------------------------------------------
proc COMM {} {


  global argc argv
  eval [lindex $argv 1] ;# вызываем вспомогательную секонд-функцию

  #   (run_cdr_argus (first argus) argus "COMM ..")

}
#-------------------------------------------------------------------------------
# proc SORT-TEST {} {

#   # (my_load "l-sort.cl" CUR_DIR) (use-package :a_sort)
#   #source "f-sort.tl"

#   global argc argv
#   eval [lindex $argv 1] ;# вызываем вспомогательную секонд-функцию

#   # (run_cdr_argus (first argus) argus "SORT ..")
# }
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
proc  SORT-TABS {} {

  #source "f-tabs.tl"
  source "f_sort.tl"

  global argc argv
  eval [lindex $argv 1] ;# вызываем вспомогательную секонд-функцию

  #   (run_cdr_argus (first argus) argus "TEST ..")

}
#-------------------------------------------------------------------------------
proc TOUR {} {

  #source "f-tabs.tl"
  #source "f-tour.tl"
  
  global argc argv
  eval [lindex $argv 1] ;# вызываем вспомогательную секонд-функцию

}
#-------------------------------------------------------------------------------
proc SORT-TEST {} {

  # (my_load "l-sort.cl" CUR_DIR) (use-package :a_sort)

  source "f-sort.tl"

  global argc argv
  eval [lindex $argv 1] ;# вызываем вспомогательную секонд-функцию

  # (run_cdr_argus (first argus) argus "SORT ..")
}
#-------------------------------------------------------------------------------

set CUR_DIR "f"
  
READ_AND_CALL_ARGUS  $CUR_DIR

#-------------------------------------------------------------------------------

# l~.tl SORT-TEST sort_main

#-------------------------------------------------------------------------------

# TODO: 

# - объeктная сорeвноватeльная систeма (стeнка на стeнку);
# - список популяции тожe сдeлать частью систeмы ТАБ-ТУР;
# - 
# - сорeвнованиe сортировок (болee тонкая настройка парамeтров и типов данных);
# - рождение сортировок, поиск оптимальных параметров уже заданных алгоритмов;

#-------------------------------------------------------------------------------

# l~.tl TOUR tour_main

# l~.tl SORT-TEST sort_main

# l~.tl SORT-TABS sort_main_03

#-------------------------------------------------------------------------------
