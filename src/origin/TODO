// -*-   mode: text ; coding: koi8   -*- ---------------------------------------
//------------------------------------------------------------------------------

Октябрь 2021:

//---------------------------------------

Основная идея:

Все что мы наблюдаем в живой природе - является следствием эволюции.
Гипотеза: тоже самое и с неживой природой! Т.е. вся наблюдаемая физика 
(энергия, материя) а также законы их преобразования - следствие эволюционного 
развития. 

Цель: смоделировать "физическую" эволюцию, посмотреть к чему она приводит.


Спосбы достижения цели:

1) Моделирование снизу - т.е. исходить из минимального набора понятий и правил,
   пытаясь угадать, что может привести к эволюции.
 
2) Моделирование сверху - запустить эволюцию классического типа (с генотипом
   и фенотипом, мутациями) и затем редуцироватьее до минимально возможной системы. 

Подсказки:  

1) в доисторическом химическом реактивном бульоне полуали преимущество
   те реакции, которые шли быстрее, например, в присутствии катализаторов;
   кроме того, выжным на начальном этапе было наличие имитации границ в виде
   ячеек.

2) можно сделать совместную схему граф-множества,
   т.е. по сути - три совместные матрицы связей, друг над другом: 
   - множества включаемых друг в друга объектов (которое также можно при желании
     описать направленными графами).
   - граф информационных потоков между всеми объектами
   - граф управляющих сигналов
   можно, например, сделать в этой схеме игру Жизнь, с избыточным описанием,
   а потом усложнять варианты.
   в общем случае - набор матриц связей можно обобщить одной матрицей, но в
   узлах должен быть вектор, а лучше - словарь + стек. 

3) Т.е. в иотге такая обобщенная схема - граф, в котором в узлах находятся
   объекты, а может и стек объектов (агентов), в общем случае перемещаемых по
   узлам и ребрам и где агенты описываются словарем-программой и прилагаемым
   стеком данных. Т.е. модель системы эволюции = граф + стеки + словари +
   программы на Joy.


Ссылки:

1) Artifical Chemistries - примитивные вещи типа моделирования экологии и 
   экономики.

2) Как, например, github/highperformancecoder/EcoLab = C++ + Tcl (пока
   не удалось скомпилировать).


//------------------------------------------------------------------------------

Какой надо выбрать минимальный набор:
  - элементов (графы, сети ?)
  - алгоритмов над этими элементами (псевдопараллельные ?)

, чтобы увидеть в динамической моделе:
  - появление объектов (деревья ?)
  - появление масштабов времени (импульсы разных масштабо ?)
  - расслоение пространства и времени (информация движется слоями ?)


//------------------------------------------------------------------------------

Коарцетивные капелька - единственная возможная модель зарождения жизни и начала 
эволюции.
Следовательно, надо это промоделировать. Самое сложное - заставить капельки 
делиться. Но тогда логично взять такое свойство за основу !?

Множества - модели делящихся и растущих капелек! (ну, или деревья графов).


//------------------------------------------------------------------------------
# 
#  UNIVERSUM CALCULATOR ............


Algorithm Learning - алгоритмическое (глубокое) обучение - автоматическое
    составление архитектур сверточных нейронных сети и подбор их параметров  
    с помощью метаэвристических алгоритмов (генетическое программирование и т.д.)

Algorithm Calculus - алгоритмическое исчисление (анализ) - автоматизированный
    роиск и представление алгоритмов в различных алгоритмических базисах, 
    переход между базисами с выявлением общих библиотек, поиск алгоритмических 
    инвариантов.

    Примеры алгоритмичских базисов:
        1) алгоритмы над простыми естественными типами данных;
        2) тензоры и их инвариаты в координатных пространствах;
        3) графы + клеточные автоматы + JOY;
    Применение:
        - записываем уравнения в тензорном виде (2) и ищем их представление на
          графах с инвариантными клеточно-автоматными правилами (3);
        - представляем физ. феномены в наблюдаемом виде (1) и ищем их отражение
          в (2) и/или (3).


#-------------------------------------------------------------------------------

Обощение графов - множества. Причем, узлы и ребра должны быть равноправны.
Если двигатся дальше по пути обобщения - в ножествах (dictionry) имена будут
числовые?

#-------------------------------------------------------------------------------

КОНЦЕПЦИИ:

 - "снизу":
 
    задаем начальную модель графов с миниимально возможным набором 
    параметров; 
    целью будет обнаружение структурирования и специализации элементов графа, 
    в том смысле что, появляется как минимум "время"  - направленные ребра 
    графов, которые динамически связывают, т.е. задают последовательные 
    временные слои пространства !!
    
- "сверху": 

   моделируем реальные или псевдореальные физ.процессы вычислительными
   временными слоями, например: 
     - ALife: простейшие случаи "законов", учитывающих только один временной слой; 
     - Газодинмаика: надо уже хотя бы 2 временных слоя; 
     - 3 или больше слоев, зацикливаем их и пытаемся представит в виде  графов не 
     только саму простанственно-временную модель, но и выч. алгоритмы
     на них, например подсчет интегралов для законов сохраниения (сразу 
     удовлeтворяeм нeкоторым законам сохранeния и ищeм движeниe как минимальный 
     по каким-то парамeтрам путь).

--------------------------------------------------------------------------------

- "Алгортмические Нейронные Сети" с операторами Joy в узлах и
         ребрах графов для обработки и передачи протоколов данных в виде Dict.
         Сравнить на тестах с чисто "нейронными сетями".


1) Граф можно представить как два множества: узлы (каэжый узел, например - список
   указателей на ребра), ребра - список пар связанных узлов.

2) Для выполнения законов сохранения можно, например, работать сначала с одним 
   множеством (узлов), потом с другим (ребер), используя данные другого множества 
   для изменения своих.
   N.B.  Однако нужно все-равно при последовательном проходе подготовить все 
         действия, если они зависят от окружающего контекста и только потом их на
         втором проходе выполнять, меняя контекст.!!

3) Но тогда, если обобщать этот алгоритм, получается, что можно брать несколько
   множеств (условных узлов/ребер) работющих по циклической схеме) и кроме того 
   использовать еще (помимо списка) более обущую структуру - словарь.
   Ключи (имена) в ней могут быть числа, а значения - ссылки на ребра/узлы.

4) Но для работы с этими словарями все-равно нужны алгоритмы! Откуда они берутся?
   Наверное надо все-равно идти от минимального разложения алгоритма на универсальных
   данных - словари, списки, стеки.

5) Задавая уже в этом элементарном словарно-алгоритмическом космосе физически
   адекватные эксперименты - искать конфигурации алгоритмов и параметров, их 
   описывающие.

6) Вывод - пишем сначала робота-мета-программиста! Он будет оперировать словарями
   и списками. Ввести сохраняющееся зщначение энергетики данных и операторов?

   
7) Перейдя потом снова к простейшим графам можно сделать, например, двухпроходный
   алгоритм:
   - 1-й цикл по всем узлам: определяем сколько "забеерм" или "отдадим в ребра,
     записываем отложенные операторы;
     2-й цикл по всем узлам: выполняем отложенные операторы; 
   - тоже самое для ребер !!!

#-------------------------------------------------------------------------------
                                                                             

ORIGIN - программа-лаборатория, для моделирования динамики и эволюции простых
         структур на графах, AlgoNN и машинах Тюринага.


- использовать квантовые алгоритмы? кубиты? из квантовой запутанности графов, при
  дальнейшем "расширении" возникает "гравитация"?

- Узды графа - безструктурные, безмассовые частицы - фотоны?  Скорость можно 
   симулировать изменя все длины реебр. А что с относительностью?


Литература:


01. Stephen Wolfram, "A New Kind of Science", 2002 

02. Konrad Hinsen "Scientific notation for the digital era" (hithub: leibniz)


#-------------------------------------------------------------------------------

Что надо сделать конкретно:

- упростить и упорядочить схемы запуска:
  * быстрый  тестовый локальный
  * долгоиграющий (скрипт должен только копировать и подготавливать, а
    потом вручную уже настраивать и запускать !!?)
- 
#-------------------------------------------------------------------------------


+) привести все к одному варианту с одинаковыми параметрами, затем использовать
   unix-opts

   sl t~.cl META tao_loop0  20 1 170 @ @  2 0 
   sl t~.cl META tao_loop1  20 1 170 2 3  2 0 

   tao_loop0 -> последовательно
   tao_loop1 -> параллельно

-)  самоусложняющаяся машина Тьюринга на графах? начинать ли ее с 
    "клеточно-графовых" автоматов? :

     - пространство: простой ориентированный граф (он же в частном случае дерева
       описывает множества и все вместе описывают гиперграфы);

     - вермя: дуги времени описывают и запоминают динамику изменения "пространства";
       придумать чем дуги времени отличаются от дуг пространства и как гни могут 
       переходить друг в друга;

     - эл.частицы: это объекты из двух и более указателей; указатель на программу, 
       двигает указатель данных и делает по нему изменения; можно обобщить на набор 
       указателей, которые циклично друг друга двигают; 

-) или сразу делать выч. модель "программа-данные" типа JOY, где:

     - опеоаторы записаны в узлах; 

     - IF реализуется. например, выбором ребра с максимальным (минимальным) 
       кол-вом узлов на их противоположных концах.

     - бибилиотеки задаются неявно - повторным прогодом по общим ребрам !!

     - головка-указатель (или одна из набора) текущей ветки программы полхет по 
       графу и тащит с собой личный стек!

     - библиотеки подпрограмм формируются неявно и без имен с помощью повторных
       вхождений ребер в узлы. выбор дальнейшей ветки формируется анализом
       специальной хэш-функции личного стека на текущий момент.

     - т.е. можно от простейшей сетевой модели перейти к достаточно сложной
       имеяя ввиду также и многомерные графовые структуры?


-) добавить алгоритмов (закон сохранения, плюсы/минусы и т. д.)

-) темная материя - "моззжечок" Вселенной? производит вычисления для движения 
   своей открытой, "физической" части?

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 
# 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
